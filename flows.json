[
    {
        "id": "29719104d6291d44",
        "type": "tab",
        "label": "image read - falconMotor",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a2cb632c74c1999c",
        "type": "tab",
        "label": "init process",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8f6ceb50f45c3ecf",
        "type": "tab",
        "label": "websocket handler",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e42599f0157e6180",
        "type": "group",
        "z": "29719104d6291d44",
        "name": "check Files",
        "style": {
            "label": true
        },
        "nodes": [
            "b131410568872d5d",
            "21a4b980ec751537",
            "d61487f94f221333",
            "43c70d2c7dd175cd",
            "24271c3da0618293",
            "ceb0d280cf12e865",
            "9e943031d5b69d8f",
            "1aebf27e979f023e",
            "6c859df67bd280e0",
            "4361e12e9bd84a5a",
            "07d0ba408236e7ae",
            "61a10d2df90a6726"
        ],
        "x": 34,
        "y": 299,
        "w": 1162,
        "h": 202
    },
    {
        "id": "cd45e048456da76d",
        "type": "group",
        "z": "29719104d6291d44",
        "name": "Convert Image and delete it",
        "style": {
            "label": true
        },
        "nodes": [
            "5c8269dfa8b37989",
            "392ea123608372ce",
            "ab5e083459ae89e6",
            "61f2c11a1ea9d86a",
            "246220c75221b2e9",
            "23f7e58bb6973551",
            "50c5e8ee609b1e18",
            "fd9c651dce984063",
            "ea5ac1516ad7e9dd"
        ],
        "x": 44,
        "y": 579,
        "w": 942,
        "h": 162
    },
    {
        "id": "da4aeef4c08f8adf",
        "type": "group",
        "z": "29719104d6291d44",
        "name": "call falcon Motor",
        "style": {
            "label": true
        },
        "nodes": [
            "d285dd9ddd793e3a",
            "349cad3e18cc7307",
            "65e04b89d367620f",
            "e9a630128f46d513"
        ],
        "x": 34,
        "y": 899,
        "w": 552,
        "h": 82
    },
    {
        "id": "866e803343faada7",
        "type": "group",
        "z": "29719104d6291d44",
        "name": "logger",
        "style": {
            "label": true
        },
        "nodes": [
            "0f5e5dc41b5ed50f",
            "0e793c467675e12e"
        ],
        "x": 754,
        "y": 899,
        "w": 252,
        "h": 82
    },
    {
        "id": "c9c2e7f5355e7ea3",
        "type": "group",
        "z": "a2cb632c74c1999c",
        "name": "wifi check",
        "style": {
            "label": true
        },
        "nodes": [
            "a4b44aa3023bb136",
            "da0a855f8988fe56",
            "cf2f1318dcc79150",
            "981e669d4589d974",
            "1eca5a742e7c53e3",
            "103527fc1f03fa19",
            "d364125dfef5f330",
            "c2186e56e5ce268c",
            "5c6372ee8bac25de",
            "7e57923fbccc927f"
        ],
        "x": 114,
        "y": 219
    },
    {
        "id": "8a03b788f1979308",
        "type": "group",
        "z": "a2cb632c74c1999c",
        "name": "recurrent wifi",
        "style": {
            "label": true
        },
        "nodes": [
            "537fe7194a65ccb9",
            "fcd122949e6a4a59"
        ],
        "x": 134,
        "y": 439
    },
    {
        "id": "ea4b339f97dbe608",
        "type": "group",
        "z": "a2cb632c74c1999c",
        "name": "inyect ScannerId",
        "style": {
            "label": true
        },
        "nodes": [
            "40b895b286c4b31b",
            "df3b304f44cf7544",
            "9da34be87b02b07a",
            "7497593b8352c848",
            "3941ecbd587fb0a6",
            "fea2cb2d1374e64a",
            "ef3a2b58f2f9cb88"
        ],
        "x": 114,
        "y": 79
    },
    {
        "id": "77788d92355a854c",
        "type": "group",
        "z": "a2cb632c74c1999c",
        "name": "get token",
        "style": {
            "label": true
        },
        "nodes": [
            "229668aa4070c616",
            "bd7a64def862e009",
            "91ae695d134c9272"
        ],
        "x": 134,
        "y": 579
    },
    {
        "id": "011ba67085db0a79",
        "type": "group",
        "z": "8f6ceb50f45c3ecf",
        "name": "websocket",
        "style": {
            "label": true
        },
        "nodes": [
            "287cf2f1fde8d7ac",
            "25fd26fb3d5f392a",
            "39ed7003b5323e60",
            "6211c4ea1042167c",
            "61925a0504d18f31"
        ],
        "x": 74,
        "y": 219,
        "w": 552,
        "h": 142
    },
    {
        "id": "b3cef6e616b52378",
        "type": "group",
        "z": "8f6ceb50f45c3ecf",
        "name": "websocket test",
        "style": {
            "label": true
        },
        "nodes": [
            "c69f4a064ad10954",
            "8289bf3b5c7f841b",
            "d7d97e6d4accacb2",
            "03d0d6295da0b14b"
        ],
        "x": 74,
        "y": 39,
        "w": 412,
        "h": 162
    },
    {
        "id": "e1b52603c6938947",
        "type": "group",
        "z": "8f6ceb50f45c3ecf",
        "name": "websocket Response",
        "style": {
            "label": true
        },
        "nodes": [
            "b3e2ac18249e8b11",
            "720aaaf16802b790",
            "dd4b528cdb1142b3",
            "ddb37b9f115fd152",
            "e9cefc2668c6e9d1",
            "26b6f5f2dd2e9980",
            "43b33649c55b573a",
            "c9ce451808d66da1",
            "35e0f8281cac3066"
        ],
        "x": 94,
        "y": 399,
        "w": 732,
        "h": 222
    },
    {
        "id": "0510f8daae458b2a",
        "type": "group",
        "z": "29719104d6291d44",
        "name": "preprocessing for the websocket Back",
        "style": {
            "label": true
        },
        "nodes": [
            "50ffb537b1229150",
            "96c186de1783bd7f",
            "9b1269300cfbab2b",
            "74eb39a550ec3d97",
            "0bdc8bb50f2b54bb",
            "84b37daa3137b5ce",
            "5c676dad8a0422ac"
        ],
        "x": 44,
        "y": 779,
        "w": 1142,
        "h": 82
    },
    {
        "id": "928414625d31ff23",
        "type": "group",
        "z": "29719104d6291d44",
        "name": "Get Id",
        "style": {
            "label": true
        },
        "nodes": [
            "5d1d1b57fcb62f41",
            "52b9378c24125654"
        ],
        "x": 44,
        "y": 1019,
        "w": 222,
        "h": 82
    },
    {
        "id": "f6b9339d315e79c8",
        "type": "websocket-listener",
        "path": "",
        "wholemsg": "false"
    },
    {
        "id": "49b1776fbf1ce66a",
        "type": "websocket-client",
        "path": "ws://3.232.87.89/susuerteWebsocket",
        "tls": "",
        "wholemsg": "false",
        "hb": "0",
        "subprotocol": ""
    },
    {
        "id": "a21ccdb1ffda080b",
        "type": "websocket-client",
        "path": "ws://localhost:4000",
        "tls": "",
        "wholemsg": "false",
        "hb": "0",
        "subprotocol": ""
    },
    {
        "id": "4e2fe5e7589b6a92",
        "type": "axios-endpoint",
        "name": "FalconProxy",
        "baseURL": "http://3.232.87.89/FalconMotor",
        "caCertPath": "",
        "rejectUnauthorized": true,
        "proxyEnabled": false,
        "proxyProtocol": "https",
        "proxyHost": "",
        "proxyPort": ""
    },
    {
        "id": "26cf54f551937318",
        "type": "axios-endpoint",
        "name": "SusuerteBack",
        "baseURL": "http://3.232.87.89/susuerteBack/scanner/token",
        "caCertPath": "",
        "rejectUnauthorized": true,
        "proxyEnabled": false,
        "proxyProtocol": "https",
        "proxyHost": "",
        "proxyPort": ""
    },
    {
        "id": "5c8269dfa8b37989",
        "type": "file in",
        "z": "29719104d6291d44",
        "g": "cd45e048456da76d",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 180,
        "y": 660,
        "wires": [
            [
                "392ea123608372ce"
            ]
        ]
    },
    {
        "id": "392ea123608372ce",
        "type": "function",
        "z": "29719104d6291d44",
        "g": "cd45e048456da76d",
        "name": "buffer to image 64",
        "func": "msg.payload = Buffer.from(msg.payload).toString('base64')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 660,
        "wires": [
            [
                "50c5e8ee609b1e18",
                "246220c75221b2e9",
                "ea5ac1516ad7e9dd"
            ]
        ]
    },
    {
        "id": "349cad3e18cc7307",
        "type": "link in",
        "z": "29719104d6291d44",
        "g": "da4aeef4c08f8adf",
        "name": "link in 1",
        "links": [
            "50c5e8ee609b1e18"
        ],
        "x": 75,
        "y": 940,
        "wires": [
            [
                "65e04b89d367620f"
            ]
        ]
    },
    {
        "id": "65e04b89d367620f",
        "type": "function",
        "z": "29719104d6291d44",
        "g": "da4aeef4c08f8adf",
        "name": "create Json",
        "func": "const obj = {\n    \"ticketType\": \"type1\",\n    \"image\": msg.payload\n}\n\nmsg.payload = obj\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 940,
        "wires": [
            [
                "d285dd9ddd793e3a"
            ]
        ]
    },
    {
        "id": "b131410568872d5d",
        "type": "inject",
        "z": "29719104d6291d44",
        "g": "e42599f0157e6180",
        "name": "path inyect",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "path",
                "v": "/Users/matador/code/susuerte-develop/falconBot/scannerFolder",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 420,
        "wires": [
            [
                "ceb0d280cf12e865",
                "21a4b980ec751537"
            ]
        ]
    },
    {
        "id": "d61487f94f221333",
        "type": "change",
        "z": "29719104d6291d44",
        "g": "e42599f0157e6180",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "file",
                "pt": "flow",
                "to": "files",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 420,
        "wires": [
            [
                "43c70d2c7dd175cd"
            ]
        ]
    },
    {
        "id": "24271c3da0618293",
        "type": "delay",
        "z": "29719104d6291d44",
        "g": "e42599f0157e6180",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 750,
        "y": 420,
        "wires": [
            [
                "9e943031d5b69d8f"
            ]
        ]
    },
    {
        "id": "ceb0d280cf12e865",
        "type": "change",
        "z": "29719104d6291d44",
        "g": "e42599f0157e6180",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "path",
                "pt": "flow",
                "to": "path",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "9e943031d5b69d8f",
        "type": "function",
        "z": "29719104d6291d44",
        "g": "e42599f0157e6180",
        "name": "inyect Path",
        "func": "const mac = global.get(\"mac\") || false\n\nif (msg.payload !== \".DS_Store\"){\n\n    msg.delete = 0\n\n   if (mac === true) {\n        msg.filename = `${flow.get('path')}/${msg.payload}`\n        flow.set(\"filename\", msg.filename)\n        return msg\n\n    } else {\n        msg.filename = `${flow.get('path')}\\\\${msg.payload}`\n        flow.set(\"filename\", msg.filename)\n        return msg\n    }\n}else{\n    msg.filename = `${flow.get('path')}/${msg.payload}`\n    msg.delete = 1\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 420,
        "wires": [
            [
                "6c859df67bd280e0",
                "4361e12e9bd84a5a"
            ]
        ]
    },
    {
        "id": "07d0ba408236e7ae",
        "type": "link out",
        "z": "29719104d6291d44",
        "g": "e42599f0157e6180",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "ab5e083459ae89e6"
        ],
        "x": 1155,
        "y": 440,
        "wires": []
    },
    {
        "id": "ab5e083459ae89e6",
        "type": "link in",
        "z": "29719104d6291d44",
        "g": "cd45e048456da76d",
        "name": "link in 2",
        "links": [
            "07d0ba408236e7ae"
        ],
        "x": 85,
        "y": 660,
        "wires": [
            [
                "5c8269dfa8b37989"
            ]
        ]
    },
    {
        "id": "246220c75221b2e9",
        "type": "change",
        "z": "29719104d6291d44",
        "g": "cd45e048456da76d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "filename",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 660,
        "wires": [
            [
                "61f2c11a1ea9d86a"
            ]
        ]
    },
    {
        "id": "23f7e58bb6973551",
        "type": "link out",
        "z": "29719104d6291d44",
        "g": "cd45e048456da76d",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "1aebf27e979f023e"
        ],
        "x": 945,
        "y": 660,
        "wires": []
    },
    {
        "id": "1aebf27e979f023e",
        "type": "link in",
        "z": "29719104d6291d44",
        "g": "e42599f0157e6180",
        "name": "link in 3",
        "links": [
            "23f7e58bb6973551"
        ],
        "x": 525,
        "y": 460,
        "wires": [
            [
                "43c70d2c7dd175cd"
            ]
        ]
    },
    {
        "id": "50c5e8ee609b1e18",
        "type": "link out",
        "z": "29719104d6291d44",
        "g": "cd45e048456da76d",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "349cad3e18cc7307",
            "a4b1799082becc25"
        ],
        "x": 525,
        "y": 700,
        "wires": []
    },
    {
        "id": "a4b1799082becc25",
        "type": "link in",
        "z": "29719104d6291d44",
        "name": "link in 4",
        "links": [
            "50c5e8ee609b1e18"
        ],
        "x": 515,
        "y": 40,
        "wires": [
            [
                "6e5e83b8697e5eaf"
            ]
        ]
    },
    {
        "id": "e9a630128f46d513",
        "type": "link out",
        "z": "29719104d6291d44",
        "g": "da4aeef4c08f8adf",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "0e793c467675e12e",
            "52b9378c24125654"
        ],
        "x": 545,
        "y": 940,
        "wires": []
    },
    {
        "id": "0f5e5dc41b5ed50f",
        "type": "debug",
        "z": "29719104d6291d44",
        "g": "866e803343faada7",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 940,
        "wires": []
    },
    {
        "id": "0e793c467675e12e",
        "type": "link in",
        "z": "29719104d6291d44",
        "g": "866e803343faada7",
        "name": "link in 6",
        "links": [
            "6c859df67bd280e0",
            "5a4c796e2d7e4c7e",
            "d5ef7b61282b67a3",
            "8d3ec05d46f35b78",
            "779af63791490631",
            "42ff19f6e6383224",
            "e9a630128f46d513",
            "d364125dfef5f330",
            "03d0d6295da0b14b"
        ],
        "x": 795,
        "y": 940,
        "wires": [
            [
                "0f5e5dc41b5ed50f"
            ]
        ]
    },
    {
        "id": "6c859df67bd280e0",
        "type": "link out",
        "z": "29719104d6291d44",
        "g": "e42599f0157e6180",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "0e793c467675e12e"
        ],
        "x": 1035,
        "y": 380,
        "wires": []
    },
    {
        "id": "4361e12e9bd84a5a",
        "type": "switch",
        "z": "29719104d6291d44",
        "g": "e42599f0157e6180",
        "name": "",
        "property": "delete",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1070,
        "y": 420,
        "wires": [
            [
                "61a10d2df90a6726"
            ],
            [
                "07d0ba408236e7ae"
            ]
        ]
    },
    {
        "id": "fd9c651dce984063",
        "type": "link in",
        "z": "29719104d6291d44",
        "g": "cd45e048456da76d",
        "name": "link in 10",
        "links": [
            "61a10d2df90a6726"
        ],
        "x": 725,
        "y": 620,
        "wires": [
            [
                "61f2c11a1ea9d86a"
            ]
        ]
    },
    {
        "id": "61a10d2df90a6726",
        "type": "link out",
        "z": "29719104d6291d44",
        "g": "e42599f0157e6180",
        "name": "link out 16",
        "mode": "link",
        "links": [
            "fd9c651dce984063"
        ],
        "x": 1155,
        "y": 400,
        "wires": []
    },
    {
        "id": "d285dd9ddd793e3a",
        "type": "axios-request",
        "z": "29719104d6291d44",
        "g": "da4aeef4c08f8adf",
        "name": "FalconMotor",
        "endpoint": "4e2fe5e7589b6a92",
        "method": "post",
        "url": "",
        "responseType": "json",
        "keepAlive": false,
        "timeout": 30000,
        "validateStatus": true,
        "headers": [
            {
                "keyType": "str",
                "keyValue": "Content-Type",
                "valueType": "str",
                "valueValue": "application/json"
            }
        ],
        "params": [
            {
                "keyType": "str",
                "keyValue": "",
                "valueType": "str",
                "valueValue": ""
            }
        ],
        "x": 410,
        "y": 940,
        "wires": [
            [
                "e9a630128f46d513"
            ]
        ]
    },
    {
        "id": "43c70d2c7dd175cd",
        "type": "array-loop",
        "z": "29719104d6291d44",
        "g": "e42599f0157e6180",
        "name": "files",
        "key": "aleea5ce7a204b68c6",
        "keyType": "msg",
        "reset": false,
        "resetValue": "value-null",
        "array": "file",
        "arrayType": "flow",
        "x": 610,
        "y": 420,
        "wires": [
            [],
            [
                "24271c3da0618293"
            ]
        ]
    },
    {
        "id": "61f2c11a1ea9d86a",
        "type": "fs-ops-delete",
        "z": "29719104d6291d44",
        "g": "cd45e048456da76d",
        "name": "",
        "path": "",
        "pathType": "str",
        "filename": "filename",
        "filenameType": "msg",
        "x": 830,
        "y": 660,
        "wires": [
            [
                "23f7e58bb6973551"
            ]
        ]
    },
    {
        "id": "21a4b980ec751537",
        "type": "fs-ops-dir",
        "z": "29719104d6291d44",
        "g": "e42599f0157e6180",
        "name": "listFile",
        "path": "path",
        "pathType": "msg",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 310,
        "y": 420,
        "wires": [
            [
                "d61487f94f221333"
            ]
        ]
    },
    {
        "id": "6e5e83b8697e5eaf",
        "type": "image viewer",
        "z": "29719104d6291d44",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "active": true,
        "x": 610,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "50ffb537b1229150",
        "type": "jimp-image",
        "z": "29719104d6291d44",
        "g": "0510f8daae458b2a",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "ret": "b64",
        "parameter1": "250",
        "parameter1Type": "num",
        "parameter2": "250",
        "parameter2Type": "num",
        "parameter3": "RESIZE_BILINEAR",
        "parameter3Type": "resizeMode",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 3,
        "jimpFunction": "resize",
        "selectedJimpFunction": {
            "name": "resize",
            "fn": "resize",
            "description": "resize the image. One of the w or h parameters can be set to automatic (\"Jimp.AUTO\" or -1).",
            "parameters": [
                {
                    "name": "w",
                    "type": "num|auto",
                    "required": true,
                    "hint": "the width to resize the image to (or \"Jimp.AUTO\" or -1)"
                },
                {
                    "name": "h",
                    "type": "num|auto",
                    "required": true,
                    "hint": "the height to resize the image to (or \"Jimp.AUTO\" or -1)"
                },
                {
                    "name": "mode",
                    "type": "resizeMode",
                    "required": false,
                    "hint": "a scaling method (e.g. Jimp.RESIZE_BEZIER)"
                }
            ]
        },
        "x": 350,
        "y": 820,
        "wires": [
            [
                "96c186de1783bd7f"
            ]
        ]
    },
    {
        "id": "96c186de1783bd7f",
        "type": "jimp-image",
        "z": "29719104d6291d44",
        "g": "0510f8daae458b2a",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "ret": "b64",
        "parameter1": "-0.5",
        "parameter1Type": "num",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 0,
        "jimpFunction": "normalize",
        "selectedJimpFunction": {
            "name": "normalize",
            "fn": "normalize",
            "description": "normalize the channels in an image",
            "parameters": []
        },
        "x": 480,
        "y": 820,
        "wires": [
            [
                "9b1269300cfbab2b"
            ]
        ]
    },
    {
        "id": "9b1269300cfbab2b",
        "type": "jimp-image",
        "z": "29719104d6291d44",
        "g": "0510f8daae458b2a",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "ret": "b64",
        "parameter1": "200",
        "parameter1Type": "num",
        "parameter2": "255",
        "parameter2Type": "num",
        "parameter3": "true",
        "parameter3Type": "bool",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 3,
        "jimpFunction": "threshold",
        "selectedJimpFunction": {
            "name": "threshold",
            "fn": "threshold",
            "description": "apply one or more functions",
            "parameters": [
                {
                    "name": "max",
                    "group": "options",
                    "type": "num",
                    "required": true,
                    "hint": "max value of byte 0 ~ 255"
                },
                {
                    "name": "replace",
                    "group": "options",
                    "type": "num",
                    "required": false,
                    "hint": "replace with byte 0 ~ 255. Default is 255"
                },
                {
                    "name": "autoGreyscale",
                    "group": "options",
                    "type": "bool",
                    "required": false,
                    "hint": "default is true"
                }
            ]
        },
        "x": 620,
        "y": 820,
        "wires": [
            [
                "5c676dad8a0422ac"
            ]
        ]
    },
    {
        "id": "74eb39a550ec3d97",
        "type": "link in",
        "z": "29719104d6291d44",
        "g": "0510f8daae458b2a",
        "name": "link in 14",
        "links": [
            "67158314365dc9ca"
        ],
        "x": 85,
        "y": 820,
        "wires": [
            [
                "84b37daa3137b5ce"
            ]
        ]
    },
    {
        "id": "0bdc8bb50f2b54bb",
        "type": "change",
        "z": "29719104d6291d44",
        "g": "0510f8daae458b2a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "image64Back",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "84b37daa3137b5ce",
        "type": "change",
        "z": "29719104d6291d44",
        "g": "0510f8daae458b2a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "imageBase",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 820,
        "wires": [
            [
                "50ffb537b1229150"
            ]
        ]
    },
    {
        "id": "5c676dad8a0422ac",
        "type": "function",
        "z": "29719104d6291d44",
        "g": "0510f8daae458b2a",
        "name": "buffer to image 64",
        "func": "msg.payload = Buffer.from(msg.payload).toString('base64')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 820,
        "wires": [
            [
                "0bdc8bb50f2b54bb"
            ]
        ]
    },
    {
        "id": "0dc5a6ab6de3fbfa",
        "type": "inject",
        "z": "29719104d6291d44",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1160,
        "wires": [
            [
                "8485a18ae70c8907"
            ]
        ]
    },
    {
        "id": "8485a18ae70c8907",
        "type": "function",
        "z": "29719104d6291d44",
        "name": "inits setTickets",
        "func": "global.set(\"tickets\",[])\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "ea5ac1516ad7e9dd",
        "type": "function",
        "z": "29719104d6291d44",
        "g": "cd45e048456da76d",
        "name": "Push Tickets",
        "func": "const tickets = global.get(\"tickets\")\ntickets.push(msg.payload)\n\nglobal.set(\"tickets\", tickets)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "5d1d1b57fcb62f41",
        "type": "function",
        "z": "29719104d6291d44",
        "g": "928414625d31ff23",
        "name": "extract id",
        "func": "const example = msg.payload\n\nconst idNames = [\n    \"ID.TRA\",\n    \"ID TRA\",\n    \"ID. TRA\",\n    \"TRA\",\n    \"NO.TR\",\n    \"Tr\",\n    \"No.Tr\",\n    \"ID TRANSACCION\",\n    ]\n\nconst keys = Object.keys(example)\n\nlet foundKey = \"\"\n\nidNames.forEach(idName => {\n    const found = keys.find(key => key == idName)\n    \n    if(found !== undefined){\n        foundKey = found\n    }\n})\n\nif(foundKey === \"\"){\n    msg.payload = {\n        topic : \"imageBack\"\n    }\n    return msg\n} \n\nmsg.payload = example[foundKey].trim()\n\nglobal.set(\"id_TRA\", msg.payload.split(\" \")[0])\n\nmsg.payload = {\n    \"topic\": \"front\",\n    \"message\": {\n        \"id_TRA\": msg.payload.split(\" \")[0],\n        \"scannerId\": \"\",\n        \n    }\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 1060,
        "wires": [
            [
                "980b5342c818cc3a"
            ]
        ]
    },
    {
        "id": "52b9378c24125654",
        "type": "link in",
        "z": "29719104d6291d44",
        "g": "928414625d31ff23",
        "name": "link in 5",
        "links": [
            "e9a630128f46d513"
        ],
        "x": 85,
        "y": 1060,
        "wires": [
            [
                "5d1d1b57fcb62f41"
            ]
        ]
    },
    {
        "id": "01623eb5e0832cd2",
        "type": "link out",
        "z": "29719104d6291d44",
        "name": "link out 7",
        "mode": "link",
        "links": [
            "61925a0504d18f31"
        ],
        "x": 445,
        "y": 1080,
        "wires": []
    },
    {
        "id": "980b5342c818cc3a",
        "type": "switch",
        "z": "29719104d6291d44",
        "name": "",
        "property": "payload.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "imageBack",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "front",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 1060,
        "wires": [
            [
                "67158314365dc9ca"
            ],
            [
                "01623eb5e0832cd2"
            ]
        ]
    },
    {
        "id": "67158314365dc9ca",
        "type": "link out",
        "z": "29719104d6291d44",
        "name": "link out 23",
        "mode": "link",
        "links": [
            "74eb39a550ec3d97"
        ],
        "x": 445,
        "y": 1040,
        "wires": []
    },
    {
        "id": "012ccaeade39be19",
        "type": "change",
        "z": "a2cb632c74c1999c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "mac",
                "pt": "global",
                "to": "payload.mac",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "a4b44aa3023bb136",
        "type": "inject",
        "z": "a2cb632c74c1999c",
        "g": "c9c2e7f5355e7ea3",
        "name": "init",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "6",
        "topic": "",
        "payload": "{\"topic\":\"init\",\"message\":{\"scannerId\":\"\"}}",
        "payloadType": "json",
        "x": 210,
        "y": 340,
        "wires": [
            [
                "7e57923fbccc927f",
                "da0a855f8988fe56"
            ]
        ]
    },
    {
        "id": "da0a855f8988fe56",
        "type": "is online",
        "z": "a2cb632c74c1999c",
        "g": "c9c2e7f5355e7ea3",
        "name": "",
        "url": "",
        "action": "0",
        "x": 380,
        "y": 340,
        "wires": [
            [
                "cf2f1318dcc79150"
            ]
        ]
    },
    {
        "id": "cf2f1318dcc79150",
        "type": "while-loop",
        "z": "a2cb632c74c1999c",
        "g": "c9c2e7f5355e7ea3",
        "name": "checkOnline",
        "condi": "!msg.payload",
        "limit": false,
        "limitTime": 10000,
        "time": "wl4d53ad71638c0354",
        "timeType": "msg",
        "x": 530,
        "y": 340,
        "wires": [
            [
                "1eca5a742e7c53e3"
            ],
            [
                "981e669d4589d974"
            ]
        ]
    },
    {
        "id": "981e669d4589d974",
        "type": "delay",
        "z": "a2cb632c74c1999c",
        "g": "c9c2e7f5355e7ea3",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 680,
        "y": 340,
        "wires": [
            [
                "c2186e56e5ce268c",
                "da0a855f8988fe56"
            ]
        ]
    },
    {
        "id": "1eca5a742e7c53e3",
        "type": "change",
        "z": "a2cb632c74c1999c",
        "g": "c9c2e7f5355e7ea3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "init",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 300,
        "wires": [
            [
                "103527fc1f03fa19"
            ]
        ]
    },
    {
        "id": "103527fc1f03fa19",
        "type": "link out",
        "z": "a2cb632c74c1999c",
        "g": "c9c2e7f5355e7ea3",
        "name": "link out 17",
        "mode": "link",
        "links": [
            "80cf6ca3f96b8451",
            "39ed7003b5323e60"
        ],
        "x": 825,
        "y": 300,
        "wires": []
    },
    {
        "id": "d364125dfef5f330",
        "type": "link out",
        "z": "a2cb632c74c1999c",
        "g": "c9c2e7f5355e7ea3",
        "name": "link out 18",
        "mode": "link",
        "links": [
            "0e793c467675e12e"
        ],
        "x": 965,
        "y": 340,
        "wires": []
    },
    {
        "id": "c2186e56e5ce268c",
        "type": "function",
        "z": "a2cb632c74c1999c",
        "g": "c9c2e7f5355e7ea3",
        "name": "msg",
        "func": "msg.payload = \"Sin Internet\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 340,
        "wires": [
            [
                "d364125dfef5f330"
            ]
        ]
    },
    {
        "id": "5c6372ee8bac25de",
        "type": "change",
        "z": "a2cb632c74c1999c",
        "g": "c9c2e7f5355e7ea3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "init",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "7e57923fbccc927f",
        "type": "function",
        "z": "a2cb632c74c1999c",
        "g": "c9c2e7f5355e7ea3",
        "name": "getScannerId",
        "func": "msg.payload.message.scannerId = global.get(\"scannerId\")\nmsg.payload.message.token = global.get(\"token\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 260,
        "wires": [
            [
                "5c6372ee8bac25de"
            ]
        ]
    },
    {
        "id": "537fe7194a65ccb9",
        "type": "inject",
        "z": "a2cb632c74c1999c",
        "g": "8a03b788f1979308",
        "name": "recurrent internet",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 480,
        "wires": [
            [
                "fcd122949e6a4a59"
            ]
        ]
    },
    {
        "id": "fcd122949e6a4a59",
        "type": "is online",
        "z": "a2cb632c74c1999c",
        "g": "8a03b788f1979308",
        "name": "",
        "url": "",
        "action": "2",
        "x": 440,
        "y": 480,
        "wires": [
            [
                "cf2f1318dcc79150"
            ]
        ]
    },
    {
        "id": "40b895b286c4b31b",
        "type": "inject",
        "z": "a2cb632c74c1999c",
        "g": "ea4b339f97dbe608",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "{\"topic\":\"setScannerId\",\"message\":{\"scannerId\":\"\"}}",
        "payloadType": "json",
        "x": 210,
        "y": 120,
        "wires": [
            [
                "fea2cb2d1374e64a",
                "9da34be87b02b07a"
            ]
        ]
    },
    {
        "id": "df3b304f44cf7544",
        "type": "function",
        "z": "a2cb632c74c1999c",
        "g": "ea4b339f97dbe608",
        "name": "getScannerId",
        "func": "msg.payload.message.scannerId = global.get(\"scannerId\")\nmsg.payload.message.token = global.get(\"token\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 160,
        "wires": [
            [
                "7497593b8352c848"
            ]
        ]
    },
    {
        "id": "9da34be87b02b07a",
        "type": "delay",
        "z": "a2cb632c74c1999c",
        "g": "ea4b339f97dbe608",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 360,
        "y": 160,
        "wires": [
            [
                "df3b304f44cf7544"
            ]
        ]
    },
    {
        "id": "7497593b8352c848",
        "type": "link out",
        "z": "a2cb632c74c1999c",
        "g": "ea4b339f97dbe608",
        "name": "link out 19",
        "mode": "link",
        "links": [
            "80cf6ca3f96b8451",
            "39ed7003b5323e60"
        ],
        "x": 645,
        "y": 160,
        "wires": []
    },
    {
        "id": "3941ecbd587fb0a6",
        "type": "change",
        "z": "a2cb632c74c1999c",
        "g": "ea4b339f97dbe608",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "scannerId",
                "pt": "global",
                "to": "payload.scannerId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "fea2cb2d1374e64a",
        "type": "file in",
        "z": "a2cb632c74c1999c",
        "g": "ea4b339f97dbe608",
        "name": "config",
        "filename": "/Users/matador/code/susuerte-develop/falconBot/config/config.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 350,
        "y": 120,
        "wires": [
            [
                "ef3a2b58f2f9cb88"
            ]
        ]
    },
    {
        "id": "ef3a2b58f2f9cb88",
        "type": "json",
        "z": "a2cb632c74c1999c",
        "g": "ea4b339f97dbe608",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 470,
        "y": 120,
        "wires": [
            [
                "012ccaeade39be19",
                "3941ecbd587fb0a6"
            ]
        ]
    },
    {
        "id": "229668aa4070c616",
        "type": "axios-request",
        "z": "a2cb632c74c1999c",
        "g": "77788d92355a854c",
        "name": "susuerteBack",
        "endpoint": "26cf54f551937318",
        "method": "get",
        "url": "",
        "responseType": "json",
        "keepAlive": false,
        "timeout": 30000,
        "validateStatus": true,
        "headers": [
            {
                "keyType": "str",
                "keyValue": "Content-Type",
                "valueType": "str",
                "valueValue": "application/json"
            }
        ],
        "params": [
            {
                "keyType": "str",
                "keyValue": "scannerId",
                "valueType": "global",
                "valueValue": "scannerId"
            }
        ],
        "x": 450,
        "y": 620,
        "wires": [
            [
                "91ae695d134c9272"
            ]
        ]
    },
    {
        "id": "bd7a64def862e009",
        "type": "inject",
        "z": "a2cb632c74c1999c",
        "g": "77788d92355a854c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 620,
        "wires": [
            [
                "229668aa4070c616"
            ]
        ]
    },
    {
        "id": "91ae695d134c9272",
        "type": "change",
        "z": "a2cb632c74c1999c",
        "g": "77788d92355a854c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "token",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "c354ce6105be0c5d",
        "type": "play audio",
        "z": "8f6ceb50f45c3ecf",
        "name": "",
        "voice": "0",
        "x": 910,
        "y": 440,
        "wires": []
    },
    {
        "id": "287cf2f1fde8d7ac",
        "type": "websocket out",
        "z": "8f6ceb50f45c3ecf",
        "g": "011ba67085db0a79",
        "name": "susuerteWebsocket",
        "server": "",
        "client": "49b1776fbf1ce66a",
        "x": 510,
        "y": 280,
        "wires": []
    },
    {
        "id": "25fd26fb3d5f392a",
        "type": "inject",
        "z": "8f6ceb50f45c3ecf",
        "g": "011ba67085db0a79",
        "name": "test",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "\"hola\"",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"topic\":\"front\",\"message\":{\"id_TRA\":\"5815861107\",\"scannerId\":\"\"}}",
        "payloadType": "json",
        "x": 170,
        "y": 260,
        "wires": [
            [
                "6211c4ea1042167c"
            ]
        ]
    },
    {
        "id": "39ed7003b5323e60",
        "type": "link in",
        "z": "8f6ceb50f45c3ecf",
        "g": "011ba67085db0a79",
        "name": "link in 11",
        "links": [
            "4fe9555143c25339",
            "a32f8aa4784be5ad",
            "f847d761b4a5b9aa",
            "26b6f5f2dd2e9980",
            "103527fc1f03fa19",
            "7497593b8352c848"
        ],
        "x": 255,
        "y": 320,
        "wires": [
            [
                "287cf2f1fde8d7ac"
            ]
        ]
    },
    {
        "id": "6211c4ea1042167c",
        "type": "function",
        "z": "8f6ceb50f45c3ecf",
        "g": "011ba67085db0a79",
        "name": "getScannerId",
        "func": "msg.payload.message.scannerId = global.get(\"scannerId\")\nmsg.payload.message.token = global.get(\"token\")\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 260,
        "wires": [
            [
                "287cf2f1fde8d7ac"
            ]
        ]
    },
    {
        "id": "61925a0504d18f31",
        "type": "link in",
        "z": "8f6ceb50f45c3ecf",
        "g": "011ba67085db0a79",
        "name": "link in 12",
        "links": [
            "01623eb5e0832cd2"
        ],
        "x": 195,
        "y": 300,
        "wires": [
            [
                "6211c4ea1042167c",
                "6a2761a8451c2c96"
            ]
        ]
    },
    {
        "id": "c69f4a064ad10954",
        "type": "websocket out",
        "z": "8f6ceb50f45c3ecf",
        "g": "b3cef6e616b52378",
        "name": "testWebsocket",
        "server": "",
        "client": "49b1776fbf1ce66a",
        "x": 380,
        "y": 80,
        "wires": []
    },
    {
        "id": "8289bf3b5c7f841b",
        "type": "inject",
        "z": "8f6ceb50f45c3ecf",
        "g": "b3cef6e616b52378",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "c69f4a064ad10954"
            ]
        ]
    },
    {
        "id": "d7d97e6d4accacb2",
        "type": "websocket in",
        "z": "8f6ceb50f45c3ecf",
        "g": "b3cef6e616b52378",
        "name": "testWebsocket",
        "server": "",
        "client": "49b1776fbf1ce66a",
        "x": 180,
        "y": 160,
        "wires": [
            [
                "03d0d6295da0b14b"
            ]
        ]
    },
    {
        "id": "03d0d6295da0b14b",
        "type": "link out",
        "z": "8f6ceb50f45c3ecf",
        "g": "b3cef6e616b52378",
        "name": "link out 20",
        "mode": "link",
        "links": [
            "0e793c467675e12e"
        ],
        "x": 385,
        "y": 160,
        "wires": []
    },
    {
        "id": "b3e2ac18249e8b11",
        "type": "websocket in",
        "z": "8f6ceb50f45c3ecf",
        "g": "e1b52603c6938947",
        "name": "susuerteWebsocket",
        "server": "",
        "client": "49b1776fbf1ce66a",
        "x": 210,
        "y": 460,
        "wires": [
            [
                "720aaaf16802b790"
            ]
        ]
    },
    {
        "id": "720aaaf16802b790",
        "type": "json",
        "z": "8f6ceb50f45c3ecf",
        "g": "e1b52603c6938947",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 460,
        "wires": [
            [
                "c9ce451808d66da1"
            ]
        ]
    },
    {
        "id": "dd4b528cdb1142b3",
        "type": "function",
        "z": "8f6ceb50f45c3ecf",
        "g": "e1b52603c6938947",
        "name": "Recurrent Tasks",
        "func": "const canSendImage = flow.get(\"canSendImage\")\nconst canRegisterTicket = flow.get(\"canRegisterTicket\")\n\nif(canRegisterTicket === true){\n\n    // send the message to create a new ticket\n   const message = {\n        topic : \"ticket\",\n        message : {\n            \"id_TRA\": global.get(\"id_TRA\"),\n            scannerId : global.get(\"scannerId\"),\n            token : global.get(\"token\"),\n            ticketInfo : flow.get(\"ticketInfo\")\n        }\n    }\n    \n    flow.set(\"canRegisterTicket\", false)\n\n    msg.payload = Buffer.from(JSON.stringify(message))\n    \n    return msg; \n}\n\nif(canSendImage === true){\n   const message = {\n        topic : \"imageSend\",\n        message : {\n            image: global.get(\"tickets\"),\n            scannerId : global.get(\"scannerId\")\n        }\n    }\n    \n    flow.set(\"canSendImage\", false)\n    global.set(\"tickets\",[])\n\n    msg.payload = Buffer.from(JSON.stringify(message))\n    \n    return msg; \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 580,
        "wires": [
            [
                "26b6f5f2dd2e9980"
            ]
        ]
    },
    {
        "id": "ddb37b9f115fd152",
        "type": "inject",
        "z": "8f6ceb50f45c3ecf",
        "g": "e1b52603c6938947",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 580,
        "wires": [
            [
                "dd4b528cdb1142b3"
            ]
        ]
    },
    {
        "id": "e9cefc2668c6e9d1",
        "type": "function",
        "z": "8f6ceb50f45c3ecf",
        "g": "e1b52603c6938947",
        "name": "canSendImage",
        "func": "const canSendImage = flow.get(\"canSendImage\")\n\nif(canSendImage === undefined){\n    flow.set(\"canSendImage\", true)\n}\n\nif(canSendImage === false){\n    flow.set(\"canSendImage\", true)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "26b6f5f2dd2e9980",
        "type": "link out",
        "z": "8f6ceb50f45c3ecf",
        "g": "e1b52603c6938947",
        "name": "link out 21",
        "mode": "link",
        "links": [
            "39ed7003b5323e60"
        ],
        "x": 505,
        "y": 580,
        "wires": []
    },
    {
        "id": "43b33649c55b573a",
        "type": "function",
        "z": "8f6ceb50f45c3ecf",
        "g": "e1b52603c6938947",
        "name": "canRegisterTicket",
        "func": "const canSendImage = flow.get(\"canRegisterTicket\")\n\n// set the information of the ticket raffleDate and prize\nflow.set(\"ticketInfo\", msg.payload.message.ticketInfo)\n\nif(canSendImage === undefined){\n    flow.set(\"canRegisterTicket\", true)\n}\n\nif(canSendImage === false){\n    flow.set(\"canRegisterTicket\", true)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "c9ce451808d66da1",
        "type": "switch",
        "z": "8f6ceb50f45c3ecf",
        "g": "e1b52603c6938947",
        "name": "",
        "property": "payload.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "error",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "imageRequest",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "35e0f8281cac3066"
            ],
            [
                "43b33649c55b573a"
            ],
            [
                "e9cefc2668c6e9d1"
            ]
        ]
    },
    {
        "id": "35e0f8281cac3066",
        "type": "change",
        "z": "8f6ceb50f45c3ecf",
        "g": "e1b52603c6938947",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 440,
        "wires": [
            [
                "c354ce6105be0c5d"
            ]
        ]
    },
    {
        "id": "6a2761a8451c2c96",
        "type": "debug",
        "z": "8f6ceb50f45c3ecf",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 360,
        "wires": []
    }
]