[
    {
        "id": "29719104d6291d44",
        "type": "tab",
        "label": "image read - falconMotor",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a2cb632c74c1999c",
        "type": "tab",
        "label": "init process",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8f6ceb50f45c3ecf",
        "type": "tab",
        "label": "websocket handler",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e42599f0157e6180",
        "type": "group",
        "z": "29719104d6291d44",
        "name": "check Files",
        "style": {
            "label": true
        },
        "nodes": [
            "b131410568872d5d",
            "21a4b980ec751537",
            "d61487f94f221333",
            "43c70d2c7dd175cd",
            "24271c3da0618293",
            "ceb0d280cf12e865",
            "9e943031d5b69d8f",
            "1aebf27e979f023e",
            "6c859df67bd280e0",
            "4361e12e9bd84a5a",
            "07d0ba408236e7ae",
            "61a10d2df90a6726"
        ],
        "x": 34,
        "y": 299,
        "w": 1162,
        "h": 202
    },
    {
        "id": "cd45e048456da76d",
        "type": "group",
        "z": "29719104d6291d44",
        "name": "Convert Image and delete it",
        "style": {
            "label": true
        },
        "nodes": [
            "5c8269dfa8b37989",
            "392ea123608372ce",
            "ab5e083459ae89e6",
            "61f2c11a1ea9d86a",
            "246220c75221b2e9",
            "23f7e58bb6973551",
            "50c5e8ee609b1e18",
            "fd9c651dce984063"
        ],
        "x": 44,
        "y": 519,
        "w": 942,
        "h": 162
    },
    {
        "id": "da4aeef4c08f8adf",
        "type": "group",
        "z": "29719104d6291d44",
        "name": "call falcon Motor",
        "style": {
            "label": true
        },
        "nodes": [
            "d285dd9ddd793e3a",
            "349cad3e18cc7307",
            "65e04b89d367620f",
            "35ed63a3832eeb2d",
            "7680aae36539f4d5",
            "93f9841ea2fcdefe",
            "fe11c7924352f110",
            "8c92dc584076f69c",
            "cdb491b0ca75de58",
            "bfb8ec3998c11054",
            "1142ce76241c12ad",
            "7eee75874ea83a0b"
        ],
        "x": 54,
        "y": 699,
        "w": 942,
        "h": 222
    },
    {
        "id": "866e803343faada7",
        "type": "group",
        "z": "29719104d6291d44",
        "name": "logger",
        "style": {
            "label": true
        },
        "nodes": [
            "0f5e5dc41b5ed50f",
            "0e793c467675e12e"
        ],
        "x": 1014,
        "y": 719,
        "w": 252,
        "h": 82
    },
    {
        "id": "c9c2e7f5355e7ea3",
        "type": "group",
        "z": "a2cb632c74c1999c",
        "name": "wifi check",
        "style": {
            "label": true
        },
        "nodes": [
            "a4b44aa3023bb136",
            "da0a855f8988fe56",
            "cf2f1318dcc79150",
            "981e669d4589d974",
            "1eca5a742e7c53e3",
            "103527fc1f03fa19",
            "d364125dfef5f330",
            "c2186e56e5ce268c",
            "5c6372ee8bac25de",
            "7e57923fbccc927f"
        ],
        "x": 114,
        "y": 219,
        "w": 892,
        "h": 162
    },
    {
        "id": "8a03b788f1979308",
        "type": "group",
        "z": "a2cb632c74c1999c",
        "name": "recurrent wifi",
        "style": {
            "label": true
        },
        "nodes": [
            "537fe7194a65ccb9",
            "fcd122949e6a4a59"
        ],
        "x": 134,
        "y": 439,
        "w": 392,
        "h": 82
    },
    {
        "id": "ea4b339f97dbe608",
        "type": "group",
        "z": "a2cb632c74c1999c",
        "name": "inyect ScannerId",
        "style": {
            "label": true
        },
        "nodes": [
            "40b895b286c4b31b",
            "df3b304f44cf7544",
            "9da34be87b02b07a",
            "7497593b8352c848",
            "3941ecbd587fb0a6",
            "fea2cb2d1374e64a",
            "ef3a2b58f2f9cb88"
        ],
        "x": 114,
        "y": 79,
        "w": 652,
        "h": 122
    },
    {
        "id": "77788d92355a854c",
        "type": "group",
        "z": "a2cb632c74c1999c",
        "name": "get token",
        "style": {
            "label": true
        },
        "nodes": [
            "229668aa4070c616",
            "bd7a64def862e009",
            "91ae695d134c9272"
        ],
        "x": 134,
        "y": 539,
        "w": 632,
        "h": 82
    },
    {
        "id": "011ba67085db0a79",
        "type": "group",
        "z": "8f6ceb50f45c3ecf",
        "name": "websocket",
        "style": {
            "label": true
        },
        "nodes": [
            "287cf2f1fde8d7ac",
            "25fd26fb3d5f392a",
            "39ed7003b5323e60",
            "6211c4ea1042167c",
            "61925a0504d18f31",
            "dd4b528cdb1142b3",
            "723faee578858bda",
            "b7a3742da023411c",
            "8f5db6ffabe33578",
            "3cb7193dd225ac74",
            "9e8bc8cf6e9c3408"
        ],
        "x": 94,
        "y": 39,
        "w": 712,
        "h": 262
    },
    {
        "id": "e1b52603c6938947",
        "type": "group",
        "z": "8f6ceb50f45c3ecf",
        "name": "websocket Response",
        "style": {
            "label": true
        },
        "nodes": [
            "b3e2ac18249e8b11",
            "720aaaf16802b790",
            "c9ce451808d66da1",
            "35e0f8281cac3066",
            "03d0d6295da0b14b"
        ],
        "x": 94,
        "y": 439,
        "w": 692,
        "h": 142
    },
    {
        "id": "5120eecda04848f2",
        "type": "group",
        "z": "29719104d6291d44",
        "name": "sender messages to front",
        "style": {
            "label": true
        },
        "nodes": [
            "e0c44f3deeeb53c3",
            "8eaaabf0cef5c158",
            "803972a2713b70b7"
        ],
        "x": 1064,
        "y": 999,
        "w": 382,
        "h": 82
    },
    {
        "id": "cd56764119f1e097",
        "type": "group",
        "z": "29719104d6291d44",
        "name": "call falcon Beuty",
        "style": {
            "label": true
        },
        "nodes": [
            "901374b3fe108d32",
            "9e6eaa2d26c2f107",
            "0f91e6d812178d2d",
            "a2e31482e8404cfb",
            "1153052208f61348",
            "b64e19f2fb74254a",
            "7ee50bbc39298829",
            "137af4475b726081"
        ],
        "x": 64,
        "y": 939,
        "w": 912,
        "h": 142
    },
    {
        "id": "5adecfb81f136e6a",
        "type": "group",
        "z": "a2cb632c74c1999c",
        "name": "init counter for backImage",
        "style": {
            "label": true
        },
        "nodes": [
            "b6a77c1030981f11",
            "9aa9cee0c498f34e"
        ],
        "x": 134,
        "y": 639,
        "w": 432,
        "h": 82
    },
    {
        "id": "d31a26e196c50b1f",
        "type": "group",
        "z": "29719104d6291d44",
        "name": "backimage Validation",
        "style": {
            "label": true
        },
        "nodes": [
            "0899dde4854304f1",
            "a50bb4889d280917",
            "645a343f7302badc",
            "f1794c228ded70a7",
            "7697e297d978f5b8",
            "3ee87c8631e1a068",
            "99720599b2a19207"
        ],
        "x": 84,
        "y": 1119,
        "w": 712,
        "h": 122
    },
    {
        "id": "f6b9339d315e79c8",
        "type": "websocket-listener",
        "path": "",
        "wholemsg": "false"
    },
    {
        "id": "49b1776fbf1ce66a",
        "type": "websocket-client",
        "path": "wss://proxyfalcon.susuerte.com/susuerteWebsocket/",
        "tls": "c1179dd2b6e641b1",
        "wholemsg": "false",
        "hb": "0",
        "subprotocol": ""
    },
    {
        "id": "a21ccdb1ffda080b",
        "type": "websocket-client",
        "path": "ws://localhost:8000",
        "tls": "",
        "wholemsg": "false",
        "hb": "0",
        "subprotocol": ""
    },
    {
        "id": "4e2fe5e7589b6a92",
        "type": "axios-endpoint",
        "name": "FalconMotor",
        "baseURL": "https://proxyfalcon.susuerte.com/FalconMotor",
        "caCertPath": "",
        "rejectUnauthorized": true,
        "proxyEnabled": false,
        "proxyProtocol": "https",
        "proxyHost": "",
        "proxyPort": ""
    },
    {
        "id": "26cf54f551937318",
        "type": "axios-endpoint",
        "name": "SusuerteBack",
        "baseURL": "https://proxyfalcon.susuerte.com/susuerteBack/scanner/token",
        "caCertPath": "",
        "rejectUnauthorized": false,
        "proxyEnabled": false,
        "proxyProtocol": "https",
        "proxyHost": "",
        "proxyPort": ""
    },
    {
        "id": "06ddd4a8830368f5",
        "type": "axios-endpoint",
        "name": "falcon Motor local",
        "baseURL": "http://localhost:4000",
        "caCertPath": "",
        "rejectUnauthorized": true,
        "proxyEnabled": false,
        "proxyProtocol": "https",
        "proxyHost": "",
        "proxyPort": ""
    },
    {
        "id": "a9a21b1f5e779a57",
        "type": "axios-endpoint",
        "name": "falconBeauty Local",
        "baseURL": "http://127.0.0.1:7000",
        "caCertPath": "",
        "rejectUnauthorized": true,
        "proxyEnabled": false,
        "proxyProtocol": "https",
        "proxyHost": "",
        "proxyPort": ""
    },
    {
        "id": "4b7cbf203dddaaa6",
        "type": "axios-endpoint",
        "name": "",
        "baseURL": "https://proxyfalcon.susuerte.com/FalconBeauty",
        "caCertPath": "",
        "rejectUnauthorized": true,
        "proxyEnabled": false,
        "proxyProtocol": "https",
        "proxyHost": "",
        "proxyPort": ""
    },
    {
        "id": "c1179dd2b6e641b1",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "certificate.crt",
        "keyname": "key.key",
        "caname": "trusted_certificate.ca-bundle",
        "servername": "",
        "verifyservercert": true,
        "alpnprotocol": ""
    },
    {
        "id": "5c8269dfa8b37989",
        "type": "file in",
        "z": "29719104d6291d44",
        "g": "cd45e048456da76d",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 180,
        "y": 600,
        "wires": [
            [
                "392ea123608372ce"
            ]
        ]
    },
    {
        "id": "392ea123608372ce",
        "type": "function",
        "z": "29719104d6291d44",
        "g": "cd45e048456da76d",
        "name": "buffer to image 64",
        "func": "msg.payload = Buffer.from(msg.payload).toString('base64')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 600,
        "wires": [
            [
                "50c5e8ee609b1e18",
                "246220c75221b2e9"
            ]
        ]
    },
    {
        "id": "349cad3e18cc7307",
        "type": "link in",
        "z": "29719104d6291d44",
        "g": "da4aeef4c08f8adf",
        "name": "link in 1",
        "links": [
            "50c5e8ee609b1e18"
        ],
        "x": 95,
        "y": 780,
        "wires": [
            [
                "65e04b89d367620f"
            ]
        ]
    },
    {
        "id": "65e04b89d367620f",
        "type": "function",
        "z": "29719104d6291d44",
        "g": "da4aeef4c08f8adf",
        "name": "create Json",
        "func": "const obj = {\n    \"ticketType\": \"type1\",\n    \"image\": msg.payload\n}\n\nmsg.payload = obj\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 780,
        "wires": [
            [
                "d285dd9ddd793e3a",
                "35ed63a3832eeb2d",
                "93f9841ea2fcdefe"
            ]
        ]
    },
    {
        "id": "b131410568872d5d",
        "type": "inject",
        "z": "29719104d6291d44",
        "g": "e42599f0157e6180",
        "name": "path inyect",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "path",
                "v": "/Users/matador/code/susuerte/susuerte-develop/falconBot/scannerFolder",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 420,
        "wires": [
            [
                "ceb0d280cf12e865",
                "21a4b980ec751537"
            ]
        ]
    },
    {
        "id": "d61487f94f221333",
        "type": "change",
        "z": "29719104d6291d44",
        "g": "e42599f0157e6180",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "file",
                "pt": "flow",
                "to": "files",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 420,
        "wires": [
            [
                "43c70d2c7dd175cd"
            ]
        ]
    },
    {
        "id": "24271c3da0618293",
        "type": "delay",
        "z": "29719104d6291d44",
        "g": "e42599f0157e6180",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 750,
        "y": 420,
        "wires": [
            [
                "9e943031d5b69d8f"
            ]
        ]
    },
    {
        "id": "ceb0d280cf12e865",
        "type": "change",
        "z": "29719104d6291d44",
        "g": "e42599f0157e6180",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "path",
                "pt": "flow",
                "to": "path",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "9e943031d5b69d8f",
        "type": "function",
        "z": "29719104d6291d44",
        "g": "e42599f0157e6180",
        "name": "inyect Path",
        "func": "const mac = global.get(\"mac\") || false\n\nif (msg.payload !== \".DS_Store\"){\n\n    msg.delete = 0\n\n   if (mac === true) {\n        msg.filename = `${flow.get('path')}/${msg.payload}`\n        flow.set(\"filename\", msg.filename)\n        return msg\n\n    } else {\n        msg.filename = `${flow.get('path')}\\\\${msg.payload}`\n        flow.set(\"filename\", msg.filename)\n        return msg\n    }\n}else{\n    msg.filename = `${flow.get('path')}/${msg.payload}`\n    msg.delete = 1\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 420,
        "wires": [
            [
                "6c859df67bd280e0",
                "4361e12e9bd84a5a"
            ]
        ]
    },
    {
        "id": "07d0ba408236e7ae",
        "type": "link out",
        "z": "29719104d6291d44",
        "g": "e42599f0157e6180",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "ab5e083459ae89e6"
        ],
        "x": 1155,
        "y": 440,
        "wires": []
    },
    {
        "id": "ab5e083459ae89e6",
        "type": "link in",
        "z": "29719104d6291d44",
        "g": "cd45e048456da76d",
        "name": "link in 2",
        "links": [
            "07d0ba408236e7ae"
        ],
        "x": 85,
        "y": 600,
        "wires": [
            [
                "5c8269dfa8b37989"
            ]
        ]
    },
    {
        "id": "246220c75221b2e9",
        "type": "change",
        "z": "29719104d6291d44",
        "g": "cd45e048456da76d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "filename",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 600,
        "wires": [
            [
                "61f2c11a1ea9d86a"
            ]
        ]
    },
    {
        "id": "23f7e58bb6973551",
        "type": "link out",
        "z": "29719104d6291d44",
        "g": "cd45e048456da76d",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "1aebf27e979f023e"
        ],
        "x": 945,
        "y": 600,
        "wires": []
    },
    {
        "id": "1aebf27e979f023e",
        "type": "link in",
        "z": "29719104d6291d44",
        "g": "e42599f0157e6180",
        "name": "link in 3",
        "links": [
            "23f7e58bb6973551"
        ],
        "x": 525,
        "y": 460,
        "wires": [
            [
                "43c70d2c7dd175cd"
            ]
        ]
    },
    {
        "id": "50c5e8ee609b1e18",
        "type": "link out",
        "z": "29719104d6291d44",
        "g": "cd45e048456da76d",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "349cad3e18cc7307",
            "a4b1799082becc25"
        ],
        "x": 525,
        "y": 640,
        "wires": []
    },
    {
        "id": "a4b1799082becc25",
        "type": "link in",
        "z": "29719104d6291d44",
        "name": "link in 4",
        "links": [
            "50c5e8ee609b1e18"
        ],
        "x": 515,
        "y": 40,
        "wires": [
            [
                "6e5e83b8697e5eaf"
            ]
        ]
    },
    {
        "id": "0f5e5dc41b5ed50f",
        "type": "debug",
        "z": "29719104d6291d44",
        "g": "866e803343faada7",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 760,
        "wires": []
    },
    {
        "id": "0e793c467675e12e",
        "type": "link in",
        "z": "29719104d6291d44",
        "g": "866e803343faada7",
        "name": "link in 6",
        "links": [
            "6c859df67bd280e0",
            "5a4c796e2d7e4c7e",
            "d5ef7b61282b67a3",
            "8d3ec05d46f35b78",
            "779af63791490631",
            "42ff19f6e6383224",
            "e9a630128f46d513",
            "d364125dfef5f330",
            "03d0d6295da0b14b",
            "9e6eaa2d26c2f107",
            "1142ce76241c12ad"
        ],
        "x": 1055,
        "y": 760,
        "wires": [
            [
                "0f5e5dc41b5ed50f"
            ]
        ]
    },
    {
        "id": "6c859df67bd280e0",
        "type": "link out",
        "z": "29719104d6291d44",
        "g": "e42599f0157e6180",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "0e793c467675e12e"
        ],
        "x": 1035,
        "y": 380,
        "wires": []
    },
    {
        "id": "4361e12e9bd84a5a",
        "type": "switch",
        "z": "29719104d6291d44",
        "g": "e42599f0157e6180",
        "name": "",
        "property": "delete",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1070,
        "y": 420,
        "wires": [
            [
                "61a10d2df90a6726"
            ],
            [
                "07d0ba408236e7ae"
            ]
        ]
    },
    {
        "id": "fd9c651dce984063",
        "type": "link in",
        "z": "29719104d6291d44",
        "g": "cd45e048456da76d",
        "name": "link in 10",
        "links": [
            "61a10d2df90a6726"
        ],
        "x": 725,
        "y": 560,
        "wires": [
            [
                "61f2c11a1ea9d86a"
            ]
        ]
    },
    {
        "id": "61a10d2df90a6726",
        "type": "link out",
        "z": "29719104d6291d44",
        "g": "e42599f0157e6180",
        "name": "link out 16",
        "mode": "link",
        "links": [
            "fd9c651dce984063"
        ],
        "x": 1155,
        "y": 400,
        "wires": []
    },
    {
        "id": "d285dd9ddd793e3a",
        "type": "axios-request",
        "z": "29719104d6291d44",
        "g": "da4aeef4c08f8adf",
        "name": "FalconMotor ",
        "endpoint": "4e2fe5e7589b6a92",
        "method": "post",
        "url": "",
        "responseType": "json",
        "keepAlive": false,
        "timeout": 30000,
        "validateStatus": true,
        "headers": [
            {
                "keyType": "str",
                "keyValue": "Content-Type",
                "valueType": "str",
                "valueValue": "application/json"
            }
        ],
        "params": [
            {
                "keyType": "str",
                "keyValue": "",
                "valueType": "str",
                "valueValue": ""
            }
        ],
        "x": 430,
        "y": 780,
        "wires": [
            [
                "fe11c7924352f110",
                "1142ce76241c12ad"
            ]
        ]
    },
    {
        "id": "43c70d2c7dd175cd",
        "type": "array-loop",
        "z": "29719104d6291d44",
        "g": "e42599f0157e6180",
        "name": "files",
        "key": "aleea5ce7a204b68c6",
        "keyType": "msg",
        "reset": false,
        "resetValue": "value-null",
        "array": "file",
        "arrayType": "flow",
        "x": 610,
        "y": 420,
        "wires": [
            [],
            [
                "24271c3da0618293"
            ]
        ]
    },
    {
        "id": "61f2c11a1ea9d86a",
        "type": "fs-ops-delete",
        "z": "29719104d6291d44",
        "g": "cd45e048456da76d",
        "name": "",
        "path": "",
        "pathType": "str",
        "filename": "filename",
        "filenameType": "msg",
        "x": 830,
        "y": 600,
        "wires": [
            [
                "23f7e58bb6973551"
            ]
        ]
    },
    {
        "id": "21a4b980ec751537",
        "type": "fs-ops-dir",
        "z": "29719104d6291d44",
        "g": "e42599f0157e6180",
        "name": "listFile",
        "path": "path",
        "pathType": "msg",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 310,
        "y": 420,
        "wires": [
            [
                "d61487f94f221333"
            ]
        ]
    },
    {
        "id": "6e5e83b8697e5eaf",
        "type": "image viewer",
        "z": "29719104d6291d44",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "active": true,
        "x": 610,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "fe11c7924352f110",
        "type": "switch",
        "z": "29719104d6291d44",
        "g": "da4aeef4c08f8adf",
        "name": "",
        "property": "payload.error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "no error",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "error no winner",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "no id found",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 610,
        "y": 780,
        "wires": [
            [
                "8c92dc584076f69c"
            ],
            [
                "cdb491b0ca75de58"
            ],
            [
                "7eee75874ea83a0b"
            ]
        ]
    },
    {
        "id": "8c92dc584076f69c",
        "type": "link out",
        "z": "29719104d6291d44",
        "g": "da4aeef4c08f8adf",
        "name": "link out 21",
        "mode": "link",
        "links": [
            "723faee578858bda"
        ],
        "x": 725,
        "y": 740,
        "wires": []
    },
    {
        "id": "e0c44f3deeeb53c3",
        "type": "link out",
        "z": "29719104d6291d44",
        "g": "5120eecda04848f2",
        "name": "link out 22",
        "mode": "link",
        "links": [
            "61925a0504d18f31"
        ],
        "x": 1405,
        "y": 1040,
        "wires": []
    },
    {
        "id": "8eaaabf0cef5c158",
        "type": "function",
        "z": "29719104d6291d44",
        "g": "5120eecda04848f2",
        "name": "create front message",
        "func": "const {content, type} = msg.payload\n\nmsg.payload = {\n    \"topic\": \"front\",\n        \"message\": {\n        \"messageContent\": content,\n        \"messageType\": type\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 1040,
        "wires": [
            [
                "e0c44f3deeeb53c3"
            ]
        ]
    },
    {
        "id": "35ed63a3832eeb2d",
        "type": "function",
        "z": "29719104d6291d44",
        "g": "da4aeef4c08f8adf",
        "name": "build validate message",
        "func": "msg.payload.content = \"validando ticket\"\nmsg.payload.type = \"validate\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 840,
        "wires": [
            [
                "7680aae36539f4d5"
            ]
        ]
    },
    {
        "id": "7680aae36539f4d5",
        "type": "link out",
        "z": "29719104d6291d44",
        "g": "da4aeef4c08f8adf",
        "name": "link out 24",
        "mode": "link",
        "links": [
            "803972a2713b70b7"
        ],
        "x": 575,
        "y": 840,
        "wires": []
    },
    {
        "id": "803972a2713b70b7",
        "type": "link in",
        "z": "29719104d6291d44",
        "g": "5120eecda04848f2",
        "name": "link in 14",
        "links": [
            "7680aae36539f4d5",
            "bfb8ec3998c11054",
            "137af4475b726081",
            "7697e297d978f5b8"
        ],
        "x": 1105,
        "y": 1040,
        "wires": [
            [
                "8eaaabf0cef5c158"
            ]
        ]
    },
    {
        "id": "cdb491b0ca75de58",
        "type": "function",
        "z": "29719104d6291d44",
        "g": "da4aeef4c08f8adf",
        "name": "build try again message",
        "func": "msg.payload.content = \"intentado de nuevo\"\nmsg.payload.type    = \"validate\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 780,
        "wires": [
            [
                "bfb8ec3998c11054"
            ]
        ]
    },
    {
        "id": "bfb8ec3998c11054",
        "type": "link out",
        "z": "29719104d6291d44",
        "g": "da4aeef4c08f8adf",
        "name": "link out 25",
        "mode": "link",
        "links": [
            "803972a2713b70b7",
            "b64e19f2fb74254a"
        ],
        "x": 955,
        "y": 780,
        "wires": []
    },
    {
        "id": "901374b3fe108d32",
        "type": "axios-request",
        "z": "29719104d6291d44",
        "g": "cd56764119f1e097",
        "name": "FalconBeauty",
        "endpoint": "4b7cbf203dddaaa6",
        "method": "post",
        "url": "/api/filter",
        "responseType": "json",
        "keepAlive": false,
        "timeout": 30000,
        "validateStatus": true,
        "headers": [
            {
                "keyType": "str",
                "keyValue": "Content-Type",
                "valueType": "str",
                "valueValue": "application/json"
            }
        ],
        "params": [
            {
                "keyType": "str",
                "keyValue": "",
                "valueType": "str",
                "valueValue": ""
            }
        ],
        "x": 420,
        "y": 1020,
        "wires": [
            [
                "9e6eaa2d26c2f107",
                "a2e31482e8404cfb"
            ]
        ]
    },
    {
        "id": "9e6eaa2d26c2f107",
        "type": "link out",
        "z": "29719104d6291d44",
        "g": "cd56764119f1e097",
        "name": "link out 26",
        "mode": "link",
        "links": [
            "0e793c467675e12e"
        ],
        "x": 565,
        "y": 980,
        "wires": []
    },
    {
        "id": "93f9841ea2fcdefe",
        "type": "change",
        "z": "29719104d6291d44",
        "g": "da4aeef4c08f8adf",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "image",
                "pt": "flow",
                "to": "payload.image",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "0f91e6d812178d2d",
        "type": "function",
        "z": "29719104d6291d44",
        "g": "cd56764119f1e097",
        "name": "create Json",
        "func": "const obj = {\n    \"image\": flow.get('image')\n}\n\nmsg = {}\nmsg.payload = obj\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1020,
        "wires": [
            [
                "901374b3fe108d32"
            ]
        ]
    },
    {
        "id": "a2e31482e8404cfb",
        "type": "switch",
        "z": "29719104d6291d44",
        "g": "cd56764119f1e097",
        "name": "",
        "property": "payload.error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "no error",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "error no winner",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 1020,
        "wires": [
            [
                "1153052208f61348"
            ],
            [
                "7ee50bbc39298829"
            ]
        ]
    },
    {
        "id": "1153052208f61348",
        "type": "link out",
        "z": "29719104d6291d44",
        "g": "cd56764119f1e097",
        "name": "link out 27",
        "mode": "link",
        "links": [
            "723faee578858bda"
        ],
        "x": 685,
        "y": 1000,
        "wires": []
    },
    {
        "id": "b64e19f2fb74254a",
        "type": "link in",
        "z": "29719104d6291d44",
        "g": "cd56764119f1e097",
        "name": "link in 15",
        "links": [
            "bfb8ec3998c11054"
        ],
        "x": 105,
        "y": 1020,
        "wires": [
            [
                "0f91e6d812178d2d"
            ]
        ]
    },
    {
        "id": "1142ce76241c12ad",
        "type": "link out",
        "z": "29719104d6291d44",
        "g": "da4aeef4c08f8adf",
        "name": "link out 28",
        "mode": "link",
        "links": [
            "0e793c467675e12e"
        ],
        "x": 555,
        "y": 740,
        "wires": []
    },
    {
        "id": "7ee50bbc39298829",
        "type": "function",
        "z": "29719104d6291d44",
        "g": "cd56764119f1e097",
        "name": "build no winner message",
        "func": "msg.payload.content = \"ticket no ganador\"\nmsg.payload.type = \"error\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1040,
        "wires": [
            [
                "137af4475b726081"
            ]
        ]
    },
    {
        "id": "137af4475b726081",
        "type": "link out",
        "z": "29719104d6291d44",
        "g": "cd56764119f1e097",
        "name": "link out 29",
        "mode": "link",
        "links": [
            "803972a2713b70b7"
        ],
        "x": 935,
        "y": 1040,
        "wires": []
    },
    {
        "id": "7eee75874ea83a0b",
        "type": "link out",
        "z": "29719104d6291d44",
        "g": "da4aeef4c08f8adf",
        "name": "link out 30",
        "mode": "link",
        "links": [
            "0899dde4854304f1"
        ],
        "x": 725,
        "y": 820,
        "wires": []
    },
    {
        "id": "0899dde4854304f1",
        "type": "link in",
        "z": "29719104d6291d44",
        "g": "d31a26e196c50b1f",
        "name": "link in 16",
        "links": [
            "7eee75874ea83a0b"
        ],
        "x": 125,
        "y": 1180,
        "wires": [
            [
                "645a343f7302badc"
            ]
        ]
    },
    {
        "id": "a50bb4889d280917",
        "type": "switch",
        "z": "29719104d6291d44",
        "g": "d31a26e196c50b1f",
        "name": "",
        "property": "payload.error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "no recognize id TRA",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "no error",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 1180,
        "wires": [
            [
                "f1794c228ded70a7"
            ],
            [
                "3ee87c8631e1a068"
            ]
        ]
    },
    {
        "id": "645a343f7302badc",
        "type": "function",
        "z": "29719104d6291d44",
        "g": "d31a26e196c50b1f",
        "name": "validate backImage",
        "func": "const contImageBack = global.get('contBackImage')\n\nif(contImageBack === 1){\n    global.set('contBackImage', 0)\n    msg.payload.error = \"no recognize id TRA\"\n    return msg\n}\n\nglobal.set('contBackImage', contImageBack + 1)\nmsg.payload.error = \"no error\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1180,
        "wires": [
            [
                "a50bb4889d280917"
            ]
        ]
    },
    {
        "id": "f1794c228ded70a7",
        "type": "function",
        "z": "29719104d6291d44",
        "g": "d31a26e196c50b1f",
        "name": "build no recognize message",
        "func": "msg.payload.content = \"ticket no reconocido\"\nmsg.payload.type = \"error\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1160,
        "wires": [
            [
                "7697e297d978f5b8"
            ]
        ]
    },
    {
        "id": "7697e297d978f5b8",
        "type": "link out",
        "z": "29719104d6291d44",
        "g": "d31a26e196c50b1f",
        "name": "link out 31",
        "mode": "link",
        "links": [
            "71b1c5b8aae1b24f",
            "803972a2713b70b7"
        ],
        "x": 755,
        "y": 1160,
        "wires": []
    },
    {
        "id": "3ee87c8631e1a068",
        "type": "change",
        "z": "29719104d6291d44",
        "g": "d31a26e196c50b1f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "backImage",
                "pt": "global",
                "to": "image",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 1200,
        "wires": [
            [
                "99720599b2a19207"
            ]
        ]
    },
    {
        "id": "9627b7c940e40d16",
        "type": "inject",
        "z": "29719104d6291d44",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1300,
        "wires": [
            [
                "043cf510d2c54a7f"
            ]
        ]
    },
    {
        "id": "b703e9db8a0bba19",
        "type": "debug",
        "z": "29719104d6291d44",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 1300,
        "wires": []
    },
    {
        "id": "043cf510d2c54a7f",
        "type": "change",
        "z": "29719104d6291d44",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ticketObject",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1300,
        "wires": [
            [
                "b703e9db8a0bba19"
            ]
        ]
    },
    {
        "id": "99720599b2a19207",
        "type": "link out",
        "z": "29719104d6291d44",
        "g": "d31a26e196c50b1f",
        "name": "link out 32",
        "mode": "link",
        "links": [
            "8f5db6ffabe33578"
        ],
        "x": 725,
        "y": 1200,
        "wires": []
    },
    {
        "id": "012ccaeade39be19",
        "type": "change",
        "z": "a2cb632c74c1999c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "mac",
                "pt": "global",
                "to": "payload.mac",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "a4b44aa3023bb136",
        "type": "inject",
        "z": "a2cb632c74c1999c",
        "g": "c9c2e7f5355e7ea3",
        "name": "init",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "6",
        "topic": "",
        "payload": "{\"topic\":\"init\",\"message\":{\"scannerId\":\"\"}}",
        "payloadType": "json",
        "x": 210,
        "y": 340,
        "wires": [
            [
                "7e57923fbccc927f",
                "da0a855f8988fe56"
            ]
        ]
    },
    {
        "id": "da0a855f8988fe56",
        "type": "is online",
        "z": "a2cb632c74c1999c",
        "g": "c9c2e7f5355e7ea3",
        "name": "",
        "url": "",
        "action": "0",
        "x": 380,
        "y": 340,
        "wires": [
            [
                "cf2f1318dcc79150"
            ]
        ]
    },
    {
        "id": "cf2f1318dcc79150",
        "type": "while-loop",
        "z": "a2cb632c74c1999c",
        "g": "c9c2e7f5355e7ea3",
        "name": "checkOnline",
        "condi": "!msg.payload",
        "limit": false,
        "limitTime": 10000,
        "time": "wl4d53ad71638c0354",
        "timeType": "msg",
        "x": 530,
        "y": 340,
        "wires": [
            [
                "1eca5a742e7c53e3"
            ],
            [
                "981e669d4589d974"
            ]
        ]
    },
    {
        "id": "981e669d4589d974",
        "type": "delay",
        "z": "a2cb632c74c1999c",
        "g": "c9c2e7f5355e7ea3",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 680,
        "y": 340,
        "wires": [
            [
                "c2186e56e5ce268c",
                "da0a855f8988fe56"
            ]
        ]
    },
    {
        "id": "1eca5a742e7c53e3",
        "type": "change",
        "z": "a2cb632c74c1999c",
        "g": "c9c2e7f5355e7ea3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "init",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 300,
        "wires": [
            [
                "103527fc1f03fa19"
            ]
        ]
    },
    {
        "id": "103527fc1f03fa19",
        "type": "link out",
        "z": "a2cb632c74c1999c",
        "g": "c9c2e7f5355e7ea3",
        "name": "link out 17",
        "mode": "link",
        "links": [
            "80cf6ca3f96b8451",
            "39ed7003b5323e60"
        ],
        "x": 825,
        "y": 300,
        "wires": []
    },
    {
        "id": "d364125dfef5f330",
        "type": "link out",
        "z": "a2cb632c74c1999c",
        "g": "c9c2e7f5355e7ea3",
        "name": "link out 18",
        "mode": "link",
        "links": [
            "0e793c467675e12e"
        ],
        "x": 965,
        "y": 340,
        "wires": []
    },
    {
        "id": "c2186e56e5ce268c",
        "type": "function",
        "z": "a2cb632c74c1999c",
        "g": "c9c2e7f5355e7ea3",
        "name": "msg",
        "func": "msg.payload = \"Sin Internet\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 340,
        "wires": [
            [
                "d364125dfef5f330"
            ]
        ]
    },
    {
        "id": "5c6372ee8bac25de",
        "type": "change",
        "z": "a2cb632c74c1999c",
        "g": "c9c2e7f5355e7ea3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "init",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "7e57923fbccc927f",
        "type": "function",
        "z": "a2cb632c74c1999c",
        "g": "c9c2e7f5355e7ea3",
        "name": "getScannerId",
        "func": "msg.payload.message.scannerId = global.get(\"scannerId\")\nmsg.payload.message.token = global.get(\"token\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 260,
        "wires": [
            [
                "5c6372ee8bac25de"
            ]
        ]
    },
    {
        "id": "537fe7194a65ccb9",
        "type": "inject",
        "z": "a2cb632c74c1999c",
        "g": "8a03b788f1979308",
        "name": "recurrent internet",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 480,
        "wires": [
            [
                "fcd122949e6a4a59"
            ]
        ]
    },
    {
        "id": "fcd122949e6a4a59",
        "type": "is online",
        "z": "a2cb632c74c1999c",
        "g": "8a03b788f1979308",
        "name": "",
        "url": "",
        "action": "2",
        "x": 440,
        "y": 480,
        "wires": [
            [
                "cf2f1318dcc79150"
            ]
        ]
    },
    {
        "id": "40b895b286c4b31b",
        "type": "inject",
        "z": "a2cb632c74c1999c",
        "g": "ea4b339f97dbe608",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "{\"topic\":\"setScannerId\",\"message\":{\"scannerId\":\"\"}}",
        "payloadType": "json",
        "x": 210,
        "y": 120,
        "wires": [
            [
                "fea2cb2d1374e64a",
                "9da34be87b02b07a"
            ]
        ]
    },
    {
        "id": "df3b304f44cf7544",
        "type": "function",
        "z": "a2cb632c74c1999c",
        "g": "ea4b339f97dbe608",
        "name": "getScannerId",
        "func": "msg.payload.message.scannerId = global.get(\"scannerId\")\nmsg.payload.message.token = global.get(\"token\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 160,
        "wires": [
            [
                "7497593b8352c848"
            ]
        ]
    },
    {
        "id": "9da34be87b02b07a",
        "type": "delay",
        "z": "a2cb632c74c1999c",
        "g": "ea4b339f97dbe608",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 360,
        "y": 160,
        "wires": [
            [
                "df3b304f44cf7544"
            ]
        ]
    },
    {
        "id": "7497593b8352c848",
        "type": "link out",
        "z": "a2cb632c74c1999c",
        "g": "ea4b339f97dbe608",
        "name": "link out 19",
        "mode": "link",
        "links": [
            "80cf6ca3f96b8451",
            "39ed7003b5323e60"
        ],
        "x": 645,
        "y": 160,
        "wires": []
    },
    {
        "id": "3941ecbd587fb0a6",
        "type": "change",
        "z": "a2cb632c74c1999c",
        "g": "ea4b339f97dbe608",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "scannerId",
                "pt": "global",
                "to": "payload.scannerId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "fea2cb2d1374e64a",
        "type": "file in",
        "z": "a2cb632c74c1999c",
        "g": "ea4b339f97dbe608",
        "name": "config",
        "filename": "/Users/matador/code/susuerte/susuerte-develop/falconBot/config/config.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 350,
        "y": 120,
        "wires": [
            [
                "ef3a2b58f2f9cb88"
            ]
        ]
    },
    {
        "id": "ef3a2b58f2f9cb88",
        "type": "json",
        "z": "a2cb632c74c1999c",
        "g": "ea4b339f97dbe608",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 470,
        "y": 120,
        "wires": [
            [
                "012ccaeade39be19",
                "3941ecbd587fb0a6",
                "272ddca12f33d80f"
            ]
        ]
    },
    {
        "id": "229668aa4070c616",
        "type": "axios-request",
        "z": "a2cb632c74c1999c",
        "g": "77788d92355a854c",
        "name": "susuerteBack",
        "endpoint": "26cf54f551937318",
        "method": "get",
        "url": "",
        "responseType": "json",
        "keepAlive": false,
        "timeout": 30000,
        "validateStatus": true,
        "headers": [
            {
                "keyType": "str",
                "keyValue": "Content-Type",
                "valueType": "str",
                "valueValue": "application/json"
            }
        ],
        "params": [
            {
                "keyType": "str",
                "keyValue": "scannerId",
                "valueType": "global",
                "valueValue": "scannerId"
            }
        ],
        "x": 450,
        "y": 580,
        "wires": [
            [
                "91ae695d134c9272"
            ]
        ]
    },
    {
        "id": "bd7a64def862e009",
        "type": "inject",
        "z": "a2cb632c74c1999c",
        "g": "77788d92355a854c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 580,
        "wires": [
            [
                "229668aa4070c616"
            ]
        ]
    },
    {
        "id": "91ae695d134c9272",
        "type": "change",
        "z": "a2cb632c74c1999c",
        "g": "77788d92355a854c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "token",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "b6a77c1030981f11",
        "type": "inject",
        "z": "a2cb632c74c1999c",
        "g": "5adecfb81f136e6a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 680,
        "wires": [
            [
                "9aa9cee0c498f34e"
            ]
        ]
    },
    {
        "id": "9aa9cee0c498f34e",
        "type": "function",
        "z": "a2cb632c74c1999c",
        "g": "5adecfb81f136e6a",
        "name": "init the backImage",
        "func": "global.set(\"contBackImage\",0)\nglobal.set(\"backImage\",\"\")\nglobal.set(\"ticketObject\",{})\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "71b1c5b8aae1b24f",
        "type": "link in",
        "z": "a2cb632c74c1999c",
        "name": "link in 17",
        "links": [
            "7697e297d978f5b8"
        ],
        "x": 175,
        "y": 760,
        "wires": [
            [
                "d2bb4e54fe6fb044"
            ]
        ]
    },
    {
        "id": "d2bb4e54fe6fb044",
        "type": "delay",
        "z": "a2cb632c74c1999c",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 280,
        "y": 760,
        "wires": [
            [
                "9aa9cee0c498f34e"
            ]
        ]
    },
    {
        "id": "272ddca12f33d80f",
        "type": "debug",
        "z": "a2cb632c74c1999c",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 20,
        "wires": []
    },
    {
        "id": "c354ce6105be0c5d",
        "type": "play audio",
        "z": "8f6ceb50f45c3ecf",
        "name": "",
        "voice": "0",
        "x": 890,
        "y": 480,
        "wires": []
    },
    {
        "id": "287cf2f1fde8d7ac",
        "type": "websocket out",
        "z": "8f6ceb50f45c3ecf",
        "g": "011ba67085db0a79",
        "name": "susuerteWebsocket",
        "server": "",
        "client": "49b1776fbf1ce66a",
        "x": 670,
        "y": 80,
        "wires": []
    },
    {
        "id": "25fd26fb3d5f392a",
        "type": "inject",
        "z": "8f6ceb50f45c3ecf",
        "g": "011ba67085db0a79",
        "name": "test front",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "\"hola\"",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"topic\":\"front\",\"message\":{\"messageContent\":\"test\",\"messageType\":\"validate\"}}",
        "payloadType": "json",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "6211c4ea1042167c"
            ]
        ]
    },
    {
        "id": "39ed7003b5323e60",
        "type": "link in",
        "z": "8f6ceb50f45c3ecf",
        "g": "011ba67085db0a79",
        "name": "link in 11",
        "links": [
            "4fe9555143c25339",
            "a32f8aa4784be5ad",
            "f847d761b4a5b9aa",
            "26b6f5f2dd2e9980",
            "103527fc1f03fa19",
            "7497593b8352c848"
        ],
        "x": 215,
        "y": 160,
        "wires": [
            [
                "287cf2f1fde8d7ac"
            ]
        ]
    },
    {
        "id": "6211c4ea1042167c",
        "type": "function",
        "z": "8f6ceb50f45c3ecf",
        "g": "011ba67085db0a79",
        "name": "getScannerId",
        "func": "msg.payload.message.scannerId = global.get(\"scannerId\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 80,
        "wires": [
            [
                "287cf2f1fde8d7ac"
            ]
        ]
    },
    {
        "id": "61925a0504d18f31",
        "type": "link in",
        "z": "8f6ceb50f45c3ecf",
        "g": "011ba67085db0a79",
        "name": "link in 12",
        "links": [
            "e0c44f3deeeb53c3",
            "60339b139742e812"
        ],
        "x": 215,
        "y": 120,
        "wires": [
            [
                "6211c4ea1042167c"
            ]
        ]
    },
    {
        "id": "03d0d6295da0b14b",
        "type": "link out",
        "z": "8f6ceb50f45c3ecf",
        "g": "e1b52603c6938947",
        "name": "link out 20",
        "mode": "link",
        "links": [
            "0e793c467675e12e"
        ],
        "x": 495,
        "y": 540,
        "wires": []
    },
    {
        "id": "b3e2ac18249e8b11",
        "type": "websocket in",
        "z": "8f6ceb50f45c3ecf",
        "g": "e1b52603c6938947",
        "name": "susuerteWebsocket",
        "server": "",
        "client": "49b1776fbf1ce66a",
        "x": 210,
        "y": 500,
        "wires": [
            [
                "720aaaf16802b790"
            ]
        ]
    },
    {
        "id": "720aaaf16802b790",
        "type": "json",
        "z": "8f6ceb50f45c3ecf",
        "g": "e1b52603c6938947",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 500,
        "wires": [
            [
                "c9ce451808d66da1",
                "03d0d6295da0b14b"
            ]
        ]
    },
    {
        "id": "dd4b528cdb1142b3",
        "type": "function",
        "z": "8f6ceb50f45c3ecf",
        "g": "011ba67085db0a79",
        "name": "RegisterTicket back -> front image ",
        "func": "const { webservice, idTra, S3} = msg.payload\nconst  backImage  = global.get(\"backImage\")\n\nconst message = {\n    topic: \"ticket\",\n    message: {\n        \"id_TRA\": idTra,\n        scannerId: global.get(\"scannerId\"),\n        token: global.get(\"token\"),\n        ticketInfo: webservice,\n        imageUrl: S3,\n        backImage: global.get('backImage')\n    }\n}\n\nif(backImage !== \"\"){\n\n    global.set(\"contBackImage\", 0)\n    global.set(\"backImage\", \"\")\n    global.set(\"ticketObject\",{})\n\n    msg.payload = Buffer.from(JSON.stringify(message))\n\n    return msg;\n}\n\nif(backImage === \"\"){\n    global.set(\"ticketObject\", message)\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 180,
        "wires": [
            [
                "287cf2f1fde8d7ac",
                "3cb7193dd225ac74"
            ]
        ]
    },
    {
        "id": "c9ce451808d66da1",
        "type": "switch",
        "z": "8f6ceb50f45c3ecf",
        "g": "e1b52603c6938947",
        "name": "",
        "property": "payload.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "error",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "imageRequest",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 530,
        "y": 500,
        "wires": [
            [
                "35e0f8281cac3066",
                "96740aa1ab1151b5"
            ],
            [],
            []
        ]
    },
    {
        "id": "35e0f8281cac3066",
        "type": "change",
        "z": "8f6ceb50f45c3ecf",
        "g": "e1b52603c6938947",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 480,
        "wires": [
            [
                "c354ce6105be0c5d"
            ]
        ]
    },
    {
        "id": "723faee578858bda",
        "type": "link in",
        "z": "8f6ceb50f45c3ecf",
        "g": "011ba67085db0a79",
        "name": "link in 13",
        "links": [
            "8c92dc584076f69c",
            "1153052208f61348"
        ],
        "x": 215,
        "y": 200,
        "wires": [
            [
                "dd4b528cdb1142b3"
            ]
        ]
    },
    {
        "id": "39d5afa120ed78c3",
        "type": "function",
        "z": "8f6ceb50f45c3ecf",
        "name": "create front message",
        "func": "if(flow.get(\"canSendFront\") === true){\n    const frontMessage = {\n        \"topic\": \"front\",\n            \"message\": {\n            \"messageContent\": flow.get(\"messageContent\"),\n            \"messageType\": \"error\"\n        }\n    }\n\n    msg.payload = frontMessage\n    \n    flow.set(\"canSendFront\", false)\n\n    return msg;\n\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 660,
        "wires": [
            [
                "60339b139742e812"
            ]
        ]
    },
    {
        "id": "60339b139742e812",
        "type": "link out",
        "z": "8f6ceb50f45c3ecf",
        "name": "link out 23",
        "mode": "link",
        "links": [
            "61925a0504d18f31"
        ],
        "x": 535,
        "y": 660,
        "wires": []
    },
    {
        "id": "dbcd527eb2ff7ada",
        "type": "inject",
        "z": "8f6ceb50f45c3ecf",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 660,
        "wires": [
            [
                "39d5afa120ed78c3"
            ]
        ]
    },
    {
        "id": "96740aa1ab1151b5",
        "type": "function",
        "z": "8f6ceb50f45c3ecf",
        "name": "send Front",
        "func": "flow.set(\"canSendFront\", true)\nflow.set(\"messageContent\", msg.payload.message)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "b7a3742da023411c",
        "type": "function",
        "z": "8f6ceb50f45c3ecf",
        "g": "011ba67085db0a79",
        "name": "RegisterTicket front -> back image ",
        "func": "const message = global.get(\"ticketObject\")\n\nif(message.message){\n    message.message.backImage = global.get('backImage')\n\n    global.set(\"contBackImage\", 0)\n    global.set(\"backImage\", \"\")\n    global.set(\"ticketObject\", {})\n\n    msg.payload = Buffer.from(JSON.stringify(message))\n\n    return msg;\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 260,
        "wires": [
            [
                "287cf2f1fde8d7ac"
            ]
        ]
    },
    {
        "id": "3cb7193dd225ac74",
        "type": "debug",
        "z": "8f6ceb50f45c3ecf",
        "g": "011ba67085db0a79",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 180,
        "wires": []
    },
    {
        "id": "8f5db6ffabe33578",
        "type": "link in",
        "z": "8f6ceb50f45c3ecf",
        "g": "011ba67085db0a79",
        "name": "RegisterTicket front -> back image ",
        "links": [
            "99720599b2a19207"
        ],
        "x": 215,
        "y": 260,
        "wires": [
            [
                "b7a3742da023411c"
            ]
        ]
    },
    {
        "id": "9e8bc8cf6e9c3408",
        "type": "inject",
        "z": "8f6ceb50f45c3ecf",
        "g": "011ba67085db0a79",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 420,
        "y": 120,
        "wires": [
            [
                "287cf2f1fde8d7ac"
            ]
        ]
    }
]